<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="0" skipped="0" tests="32" time="0.155" timestamp="2024-07-02T14:09:16.541170" hostname="Slappy"><testcase classname="" name="Article in many_to_many.py Article is initialized with a title" time="0.001" /><testcase classname="" name="Article in many_to_many.py title is an immutable string" time="0.001" /><testcase classname="" name="Article in many_to_many.py title is between 5 and 50 characters inclusive" time="0.001" /><testcase classname="" name="Article in many_to_many.py article has an author" time="0.001" /><testcase classname="" name="Article in many_to_many.py author is of type Author and mutable" time="0.001" /><testcase classname="" name="Article in many_to_many.py article has a magazine" time="0.001" /><testcase classname="" name="Article in many_to_many.py magazine is of type Magazine and mutable" time="0.001" /><testcase classname="" name="Article in many_to_many.py Article class has all attribute" time="0.001" /><testcase classname="" name="Author in many_to_many.py Author is initialized with a name" time="0.001" /><testcase classname="" name="Author in many_to_many.py author name is of type str and cannot change" time="0.001" /><testcase classname="" name="Author in many_to_many.py author name is longer than 0 characters" time="0.000" /><testcase classname="" name="Author in many_to_many.py author has many articles" time="0.000" /><testcase classname="" name="Author in many_to_many.py author articles are of type Article" time="0.000" /><testcase classname="" name="Author in many_to_many.py author has many magazines" time="0.001" /><testcase classname="" name="Author in many_to_many.py author magazines are of type Magazine" time="0.001" /><testcase classname="" name="Author in many_to_many.py author magazines are unique" time="0.001" /><testcase classname="" name="Author in many_to_many.py creates and returns a new article given a magazine and title" time="0.001" /><testcase classname="" name="Author in many_to_many.py returns a list of topic areas for all articles by author" time="0.001" /><testcase classname="" name="Author in many_to_many.py topic areas are unique" time="0.001" /><testcase classname="" name="Magazine in many_to_many.py Magazine is initialized with a name" time="0.001" /><testcase classname="" name="Magazine in many_to_many.py magazine name is of type str and can change" time="0.000" /><testcase classname="" name="Magazine in many_to_many.py magazine name is between 2 and 16 characters, inclusive" time="0.000" /><testcase classname="" name="Magazine in many_to_many.py Magazine is initialized with a category" time="0.000" /><testcase classname="" name="Magazine in many_to_many.py magazine category is of type str and can change" time="0.000" /><testcase classname="" name="Magazine in many_to_many.py magazine category has length greater than 0" time="0.000" /><testcase classname="" name="Magazine in many_to_many.py magazine has many articles" time="0.001" /><testcase classname="" name="Magazine in many_to_many.py magazine articles are of type Article" time="0.001" /><testcase classname="" name="Magazine in many_to_many.py magazine has many contributors" time="0.001" /><testcase classname="" name="Magazine in many_to_many.py magazine contributors are of type Author" time="0.001" /><testcase classname="" name="Magazine in many_to_many.py magazine contributors are unique" time="0.000" /><testcase classname="" name="Magazine in many_to_many.py returns list of titles strings of all articles written for that magazine" time="0.000" /><testcase classname="" name="Magazine in many_to_many.py returns author list who have written more than 2 articles for the magazine" time="0.000" /></testsuite></testsuites>